homeassistant:
  customize:
    sensor.sparsnas_battery_remaining:
      hidden: true
      icon: mdi:battery-outline
    sensor.sparsnas_frequency_error:
      hidden: true
      icon: mdi:signal
    sensor.kwh_today:
      group:
        group.sparsnas:
          friendly_name: Today
      icon: mdi:flash-circle
    sensor.kwh_current_month:
      group:
        group.sparsnas:
          friendly_name: This Month
      icon: mdi:flash-circle
    sensor.sparsnas_template_kwh_sensor_day:
      hidden: true
    sensor.sparsnas_template_kwh_sensor_month:
      hidden: true
    sensor.sparsnas_energy_consumption_over_time:
      hidden: true
      icon: mdi:flash-circle
    sensor.sparsnas_energy_consumption_momentary:
      extra_data_template: '${"Battery: " + entities[''sensor.sparsnas_battery_remaining''].state
        + "%, Signal: " + entities[''sensor.sparsnas_frequency_error''].state}'
      group:
        group.sparsnas:
          friendly_name: Power usage
      icon: mdi:flash-circle

sensor:
  - platform: mqtt
    state_topic: !secret sparsnas_sensor
    name: "Sparsnäs energy consumption momentary"
    unit_of_measurement: "W"
    value_template: '{{ value_json.Watt | round(1) }}'
    icon: mdi:flash-circle
# Note that the sensor below will be resetted if you remove/reinstall the batteries in the Sparsnäs transmitter
  - platform: mqtt
    state_topic: !secret sparsnas_sensor
    name: "Sparsnäs energy consumption over time"
    unit_of_measurement: "kWh"
    value_template: '{{ value_json.kWh | round(1) }}'
    icon: mdi:flash-circle
    device_class: energy
    state_class: total_increasing
  - platform: mqtt
    state_topic: !secret sparsnas_sensor
    name: "Sparsnäs Battery remaining"
    unit_of_measurement: "%"
    value_template: '{{ value_json.battery | round(1) }}'
    icon: mdi:battery-outline
  - platform: mqtt
    state_topic: !secret sparsnas_sensor
    name: "Sparsnäs Frequency Error"
    unit_of_measurement: "%"
    value_template: '{{ value_json.FreqErr }}'
    icon: mdi:signal
  - platform: mqtt
    name: "Sparsnäs template kwh sensor day"
    state_topic: "template/kwh/day"
    icon: mdi:flash-circle
  - platform: mqtt
    name: "Sparsnäs template kwh sensor month"
    state_topic: "template/kwh/month"
    icon: mdi:flash-circle
  - platform: template
    sensors:
      kwh_current_month:
        friendly_name: "Sparsnäs current month"
        unit_of_measurement: "kWh"
        value_template: >-
          {{ (float(states.sensor.sparsnas_energy_consumption_over_time.state) - float(states.sensor.sparsnas_template_kwh_sensor_month.state)) | round(1) }}
      kwh_today:
        friendly_name: "Sparsnäs current day"
        unit_of_measurement: "kWh"
        value_template: >-
          {{ (float(states.sensor.sparsnas_energy_consumption_over_time.state) - float(states.sensor.sparsnas_template_kwh_sensor_day.state)) | round(1) }}

# Thanks to @bhaap and @naestrom for the monthly and daily automation below
automation:
- action:
  - data:
      payload_template: '{{ states(''sensor.sparsnas_energy_consumption_over_time'') }}'
      retain: 'true'
      topic: template/kwh/month
    service: mqtt.publish
  alias: Sparsnäs monthly consumption
  trigger:
    platform: time
    at: '00:00:01'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ now().day | string == "1" }}'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ now().month | string == "1" }}'
          - condition: template
            value_template: '{{ now().month | string == "2" }}'
          - condition: template
            value_template: '{{ now().month | string == "3" }}'
          - condition: template
            value_template: '{{ now().month | string == "4" }}'
          - condition: template
            value_template: '{{ now().month | string == "5" }}'
          - condition: template
            value_template: '{{ now().month | string == "6" }}'
          - condition: template
            value_template: '{{ now().month | string == "7" }}'
          - condition: template
            value_template: '{{ now().month | string == "8" }}'
          - condition: template
            value_template: '{{ now().month | string == "9" }}'
          - condition: template
            value_template: '{{ now().month | string == "10" }}'
          - condition: template
            value_template: '{{ now().month | string == "11" }}'
          - condition: template
            value_template: '{{ now().month | string == "12" }}'
  id: '1516722867362'

- action:
  - data:
      payload_template: "{{ states('sensor.sparsnas_energy_consumption_over_time')}}"
      retain: 'true'
      topic: template/kwh/day
    service: mqtt.publish
  alias: Sparsnäs daily consumption
  condition: []
  id: '1516806539856'
  trigger:
  - at: 00:00:02
    platform: time

- action:
  - data:
      entity_id: automation.sparsnas_daily_consumption
    service: automation.trigger
  - data:
      entity_id: automation.sparsnas_monthly_consumption
    service: automation.trigger
  alias: trigger-sparsnas-if-unknown
  condition:
  - condition: state
    entity_id: sensor.sparsnas_template_kwh_sensor_month
    state: Unknown
  id: '1519996400010'
  trigger:
  - entity_id: sensor.sparsnas_energy_consumption_over_time
    from: unknown
    platform: state


group:
  sparsnas:
    name: Energy Consumption
    icon: mdi:flash-circle
    entities:
      - sensor.sparsnas_energy_consumption_momentary
      - sensor.sparsnas_energy_consumption_over_time
      - sensor.sparsnas_battery_remaining
      - sensor.sparsnas_frequency_error
      - sensor.kwh_today
      - sensor.kwh_current_month
